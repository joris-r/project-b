component ::=
    ( 'MACHINE' | 'REFINEMENT' | 'IMPLEMENTATION' ) header statements 'END'
    
header ::=
    identifier paren_ident_list?
    
statements ::=
    ( 'REFINES' | 'CONCRETE_VARIABLES' ) ident_list
    |
    ( 'CONSTRAINTS' | 'INVARIANT' ) expression
    |
    'INITIALISATION' substitution
    |
    'OPERATIONS' operation_list
    
operation_list ::=
    operation ( ';' operation )*

operation ::=
    ( ident_list '<--' )? identifier paren_ident_list? '=' substitution
    
substitution ::=
    'BEGIN' substitution 'END'
    |
    'PRE' expression 'THEN' substitution 'END'
    |
    'VAR' ident_list 'IN' substitution 'END'
    |
    'WHILE' expression
    'DO' substitution
    'INVARIANT' expression
    'VARIANT' expression
    'END'
    |
    substitution ( ';' | '||' ) substitution
    |
    expression ':=' expression

expression ::=
    ( '-' | 'not' ) expression
    |
    expression '(' expression ')'
    |
    ( expression ( '<=>' | '=>' ) )? expression2
    
expression2 ::= ( expression2 ( '&' | 'or' ) )? expression3

expression3 ::= ( expression3 ( ':' | '<=' | '=' ) )? expression4

expression4 ::= ( expression4 ( ',' ) )? expression5

expression5 ::= ( expression5 ( '-->' ) )? expression6

expression6 ::= ( expression6 ( '|->' | '<|' | '\/' | '◦' | '×' ) )? expression7

expression7 ::= ( expression7 ( '..' ) )? expression8

expression8 ::= ( expression8 ( '+' | '-' ) )? expression9

expression9 ::= ( expression9 ( '*' | '/' | 'mod' ) )? term

term ::=
    identifier '$0'?
    |
    number
    |
    '(' expression ')'
    |
    '{' expression '}'
    |
    '{' ident_list '|' expression '}'
    |
    '%' ( identifier | paren_ident_list )
        '.' '(' expression '|' expression ')'
    
    
paren_ident_list ::=
    '(' ident_list ')'

ident_list ::=
    identifier ( ',' identifier )*
    
identifier ::=
    letter ( letter | digit | '_' )*
    
number ::=
    digit+ ( '.' digit+ )?
